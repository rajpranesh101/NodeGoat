name: Gitleaks Scan

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  scan:
    name: Gitleaks Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'  # Ensure we use Go 1.21 or later

      - name: Install Gitleaks
        run: go install github.com/zricethezav/gitleaks/v8@latest

      # Step to create .gitleaksignore file from josys_known_ve_list.json
      - name: Create .gitleaksignore file
        run: |
          echo "Creating .gitleaksignore file from josys_known_ve_list.json..."
          jq -r '.secrets_exception_list[]' josys_known_ve_list.json > .gitleaksignore
          echo "Contents of .gitleaksignore:"
          cat .gitleaksignore

      - name: Run Gitleaks
        id: gitleaks
        continue-on-error: false  # Continue the job even if leaks are detected
        run: |
          gitleaks detect --source=. --no-git --redact -v --exit-code=2 --report-format=csv --report-path=results.csv --log-level=debug
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }} # Only required for Organizations, not personal accounts.

      - name: Upload Gitleaks report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: gitleaks-report
          path: results.csv

      - name: Check for Gitleaks exit code
        if: steps.gitleaks.outcome == 'failure'
        run: |
          echo "Gitleaks detected leaks. Failing the build."
          exit 1
